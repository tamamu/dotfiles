#!/bin/sh

DOT_DIRECTORY="${HOME}/.dotfiles"
DOT_TARBALL="https://github.com/tamamu/dotfiles/tarball/master"
REMOTE_URL="https://github.com/tamamu/dotfiles.git"

POWERLINE_DIRECTORY="${HOME}/powerline_fonts"
POWERLINE_URL="https://github.com/powerline/fonts.git"

usage() {
  name=`basename $0`
  cat <<EOF
Usage:
  $name [arguments] [command]
Commands:
  deploy
  initialize
Arguments:
  -f $(tput setaf 1)** warning **$(tput sgr0) Overwrite dotfiles.
  -h Print help (this message)
EOF
  exit 1
}

while getopts :f:h opt; do
  case ${opt} in
    f)
      OVERWRITE=true
      ;;
    h)
      usage
      ;;
    esac
  done
shift $((OPTIND - 1))

put_proc() {
  echo $(tput setaf 3)* $1...$(tput sgr0)
}

put_comp() {
  echo $(tput setaf 2)✔ $1$(tput sgr0)
}

put_fail() {
  echo $(tput setaf 1)✗ $1$(tput sgr0)
}

download() {
  if [ -n "${OVERWRITE}" -o ! -d ${DOT_DIRECTORY} ]; then
    put_proc "Download dotfiles"
    rm -rf ${DOT_DIRECTORY}
    git clone --recursive ${REMOTE_URL} ${DOT_DIRECTORY}
    if [ $? = 0 ]; then
      put_comp "Download dotfiles complete."
    else
      put_fail "Download dotfiles failed."
      return 1
    fi
  fi
}

link_files() {
  put_proc "Link base16-shell"
  ln -s -i $DOT_DIRECTORY/base16-shell $HOME/.config/base16-shell
  put_proc "Link neovim config"
  ln -s -i $DOT_DIRECTORY/nvim $HOME/.config/nvim
  put_proc "Link zshrc"
  ln -s -i $DOT_DIRECTORY/zshrc $HOME/.zshrc
}

initialize() {
  put_proc "Download Powerline fonts"
  git clone ${POWERLINE_URL} --depth=1 ${POWERLINE_DIRECTORY}
  if [ $? = 0 ]; then
    put_comp "Download Powerline fonts complete."
    put_proc "Install Powerline fonts"
    cd ${POWERLINE_DIRECTORY}
    exec install.sh
    cd ..
    rm -rf ${POWERLINE_DIRECTORY}
    put_comp "Install Powerline fonts complete."
  else
    put_fail "Install Powerline fonts failed. Skip."
  fi
  put_proc "Change shell to zsh"
  [ ${SHELL} != "/bin/zsh" ] && chsh -s /bin/zsh
  put_comp "Initialize complete."
}

command=$1
[ $# -gt 0 ] && shift

case $command in
  deploy)
    link_files
    ;;
  init)
    download && initialize
    ;;
  *)
    usage
    ;;
esac


exit 0
